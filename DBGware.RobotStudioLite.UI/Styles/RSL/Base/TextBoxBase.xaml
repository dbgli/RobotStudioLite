<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style
        x:Key="TextBoxBaseStyle"
        BasedOn="{x:Null}"
        TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxText}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="TextBox.TextWrapping" Value="NoWrap" />
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource CommonControlsTextBoxSelection}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{DynamicResource CommonControlsTextBoxErrorBorder}" BorderThickness="1">
                        <AdornedElementPlaceholder x:Name="Placeholder" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="{DynamicResource Cut}" Command="Cut" />
                    <MenuItem Header="{DynamicResource Copy}" Command="Copy" />
                    <MenuItem Header="{DynamicResource Paste}" Command="Paste" />
                    <MenuItem Header="{DynamicResource SelectAll}" Command="SelectAll" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextDisabled}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundHover}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundFocused}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextFocused}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderFocused}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <!--
                                OneTime is used to prevent a memory leak since ValidationError doesn't impl INotifyPropertyChanged and gets stored in a static: System.ComponentModel.ReflectTypeDescriptionProvider._propertyCache
                                It holds a reference to the DataContext
                            -->
                            <!--
                                也是因为OneTime，导致如果多次错误，错误内容始终为第一次的内容，如果错误内容里动态地显示绑定的value，将是很明显的bug，而且在需要动态切换语言的情况下也是如此。
                                在不确定内存泄露是否修复前，先暂时改为默认，暂无明显问题。
                            -->
                            <!--<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneTime, Path=(Validation.Errors)[0].ErrorContent}" />-->
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                            <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxErrorBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxErrorForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxErrorBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>