MODULE MainModule
    !***********************************************************
    !
    ! Module: MainModule
    !
    ! Description: 主模块
    !
    ! Author: dbgli
    !
    ! Version: 1.0
    !
    !***********************************************************

    CONST jointtarget HomePoint_1:=[[0,0,0,0,90,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget HomePoint_2:=[[-104.123187632,14.056880213,20.882541821,81.800053047,101.538541598,54.230697972],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    CONST robtarget PickOriginPoint_1:=[[0,0,0],[0,1,0,0],[0,-1,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget PickOriginPoint_2:=[[104.987822703,-0.006148794,-0.000384409],[0.000000003,0.000000002,1,-0.00000002],[0,-1,-2,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget PickStandbyPoint:=[[104.99802306,130.000999518,216.105993219],[0.000000005,1,0,0.000000013],[-1,0,-1,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget AdjustmentPoint_1:=[[10,10,0],[1,0,0,0],[-1,1,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget AdjustmentPoint_2:=[[0,0,0],[0.707106781,0,0,0.707106781],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget PutOriginPoint:=[[0,0,0],[0.5,-0.5,-0.5,-0.5],[-2,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    CONST TPosition PushPosition:=IPushPosition;
    CONST bool IsClosedLoopMode:=IIsClosedLoopMode;

    VAR num PickRow;
    VAR num PickColumn;
    VAR robtarget PickPoint;
    VAR robtarget PutPoint;
    VAR robtarget PushPoint;

    !***********************************************************
    ! 初始化函数：
    !     复位IO信号，机器人归位。
    !***********************************************************
    PROC Init()
        Reset do0_VacOn;
        Reset do1_VacBlow;

        MoveAbsJ HomePoint_1\NoEOffs,v200,fine,tool0\WObj:=wobj0;
    ENDPROC

    !***********************************************************
    ! 有效性检查函数：
    !     判断任务数据是否符合要求。
    !***********************************************************
    PROC ValidityCheck()
        IF Rows<>Round(Rows) RAISE ERROR_ROWS_NOT_INT;
        IF Rows<1 RAISE ERROR_ROWS_OUT_OF_RANGE;

        IF Columns<>Round(Columns) RAISE ERROR_COLUMNS_NOT_INT;
        IF Columns<1 RAISE ERROR_COLUMNS_OUT_OF_RANGE;

        IF SpacingX<=0 RAISE ERROR_SPACINGX_OUT_OF_RANGE;
        IF SpacingY<=0 RAISE ERROR_SPACINGY_OUT_OF_RANGE;

        IF MaxNumber<>Round(MaxNumber) RAISE ERROR_MAXNUMBER_NOT_INT;
        IF MaxNumber<1 OR MaxNumber>Rows*Columns RAISE ERROR_MAXNUMBER_OUT_OF_RANGE;

        IF Number<>Round(Number) RAISE ERROR_NUMBER_NOT_INT;
        IF Number<1 OR Number>MaxNumber RAISE ERROR_NUMBER_OUT_OF_RANGE;

        FOR Index FROM 1 TO Number DO
            IF Dominoes{Index}.ID<>Round(Dominoes{Index}.ID) RAISE ERROR_ID_NOT_INT;
            IF Dominoes{Index}.ID<1 OR Dominoes{Index}.ID>Rows*Columns RAISE ERROR_ID_OUT_OF_RANGE;

            IF Dominoes{Index}.Size.Length<=0 RAISE ERROR_LENGTH_OUT_OF_RANGE;
            IF Dominoes{Index}.Size.Width<=0 RAISE ERROR_WIDTH_OUT_OF_RANGE;
            IF Dominoes{Index}.Size.Height<=0 RAISE ERROR_HEIGHT_OUT_OF_RANGE;
        ENDFOR
    ERROR
        Init;
        Stop;
    ENDPROC


    !***********************************************************
    ! 主函数：
    !     骨牌任务进入点。
    !***********************************************************
    PROC Main()
        Init;
        ValidityCheck;

        FOR Index FROM 1 TO Number DO
            ! 计算拾取点
            PickRow:=(Dominoes{Index}.ID-1) DIV Columns;
            PickColumn:=(Dominoes{Index}.ID-1) MOD Columns;

            IF PickColumn<3 THEN
                PickPoint:=Offs(PickOriginPoint_1,PickColumn*SpacingX,PickRow*SpacingY,0);
            ELSE
                PickPoint:=Offs(PickOriginPoint_2,(PickColumn-3)*SpacingX,PickRow*SpacingY,0);
            ENDIF

            ! 拾取骨牌
            MoveJ PickStandbyPoint,v200,z100,SuctionCup\WObj:=WorkObject_1;
            MoveJ RelTool(PickPoint,0,0,-50),v200,fine,SuctionCup\WObj:=WorkObject_1;
            MoveL PickPoint,v200,fine,SuctionCup\WObj:=WorkObject_1;
            Pick;
            MoveL RelTool(PickPoint,0,0,-50),v200,fine,SuctionCup\WObj:=WorkObject_1;
            MoveJ PickStandbyPoint,v200,z100,SuctionCup\WObj:=WorkObject_1;

            ! 调整骨牌
            MoveJ RelTool(AdjustmentPoint_1,0,0,-50),v200,fine,SuctionCup\WObj:=WorkObject_2;
            MoveL RelTool(AdjustmentPoint_1,0,0,-1),v200,fine,SuctionCup\WObj:=WorkObject_2;
            Put;
            MoveL RelTool(AdjustmentPoint_1,0,0,-50),v200,fine,SuctionCup\WObj:=WorkObject_2;
            MoveL RelTool(AdjustmentPoint_2,0,0,-50),v200,fine,SuctionCup\WObj:=WorkObject_2;
            MoveL AdjustmentPoint_2,v200,fine,SuctionCup\WObj:=WorkObject_2;
            Pick;
            MoveL RelTool(AdjustmentPoint_2,0,0,-50),v200,fine,SuctionCup\WObj:=WorkObject_2;

            ! 计算摆放点
            ! (*) 左乘四元数围绕工件坐标系旋转。
            ! ( ) 右乘四元数围绕工具坐标系旋转。
            PutPoint:=Offs(PutOriginPoint,Dominoes{Index}.Position.X,Dominoes{Index}.Position.Y,0);
            PutPoint.rot:=OrientZYX(Dominoes{Index}.Position.R,0,0)*PutPoint.rot;

            ! 摆放骨牌
            MoveAbsJ HomePoint_2\NoEOffs,v200,z100,tool0\WObj:=wobj0;
            MoveJ RelTool(PutPoint,50,0,0),v200,fine,SuctionCup\WObj:=WorkObject_3;
            MoveL RelTool(PutPoint,1,0,0),v200,fine,SuctionCup\WObj:=WorkObject_3;
            Put;
            MoveL RelTool(PutPoint,1,0,-50),v200,fine,SuctionCup\WObj:=WorkObject_3;
            MoveAbsJ HomePoint_2\NoEOffs,v200,z100,tool0\WObj:=wobj0;
        ENDFOR

        ! 计算推倒点
        PushPoint:=Offs(PutOriginPoint,PushPosition.X,PushPosition.Y,0);
        PushPoint.rot:=OrientZYX(PushPosition.R,0,0)*PushPoint.rot;

        ! 推倒骨牌
        MoveJ RelTool(PushPoint,50,0,-30),v200,z20,SuctionCup\WObj:=WorkObject_3;
        MoveL RelTool(PushPoint,15,0,-30),v200,z20,SuctionCup\WObj:=WorkObject_3;
        MoveL RelTool(PushPoint,15,0,20),v100,fine,SuctionCup\WObj:=WorkObject_3;
        MoveL RelTool(PushPoint,15,0,-30),v200,z20,SuctionCup\WObj:=WorkObject_3;
        MoveL RelTool(PushPoint,50,0,-30),v200,z20,SuctionCup\WObj:=WorkObject_3;

        ! 归位
        MoveAbsJ HomePoint_2\NoEOffs,v200,z100,tool0\WObj:=wobj0;
        Init;
    ENDPROC

ENDMODULE